<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>


        <record id="apptype_backup_upload" model="clouder.application.type">
            <field name="name">backup-upload</field>
            <field name="system_user">backup</field>
            <field name="role_ids" eval="[(6, 0, [ref('role_no_backup')])]"/>
        </record>
        <record id="apptype_backup_upload_option_protocol" model="clouder.application.type.option">
            <field name="apptype_id" ref="apptype_backup_upload"/>
            <field name="name">protocol</field>
            <field name="type">container</field>
            <field name="auto" eval="True"/>
        </record>
        <record id="apptype_backup_upload_option_host" model="clouder.application.type.option">
            <field name="apptype_id" ref="apptype_backup_upload"/>
            <field name="name">host</field>
            <field name="type">container</field>
            <field name="auto" eval="True"/>
        </record>
        <record id="apptype_backup_upload_option_login" model="clouder.application.type.option">
            <field name="apptype_id" ref="apptype_backup_upload"/>
            <field name="name">login</field>
            <field name="type">container</field>
            <field name="auto" eval="True"/>
        </record>
        <record id="apptype_backup_upload_option_password" model="clouder.application.type.option">
            <field name="apptype_id" ref="apptype_backup_upload"/>
            <field name="name">password</field>
            <field name="type">container</field>
            <field name="auto" eval="True"/>
        </record>

        <record id="image_backup_upload" model="clouder.image">
            <field name="name">img_backup_upload</field>
            <field name="current_version">1</field>
            <field name="parent_id" ref="image_base"/>
            <field name="dockerfile"><![CDATA[
RUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -q install lftp

RUN mkdir /opt/upload
]]></field>
        </record>
        <record id="image_backup_upload_volume_upload" model="clouder.image.volume">
            <field name="image_id" ref="image_backup_upload"/>
            <field name="name">/opt/upload</field>
            <field name="nosave" eval="True"/>
        </record>

        <record id="app_backup_upload" model="clouder.application">
            <field name="name">Backup Upload</field>
            <field name="code">backup-upl</field>
            <field name="current_version">1</field>
            <field name="type_id" ref="apptype_backup_upload"/>
            <field name="default_image_id" ref="image_backup_upload"/>
        </record>



        <record id="apptype_backup" model="clouder.application.type">
            <field name="name">backup</field>
            <field name="system_user">backup</field>
            <field name="role_ids" eval="[(6, 0, [ref('role_backup'),ref('role_no_backup')])]"/>
        </record>
        <record id="apptype_backup_option_method" model="clouder.application.type.option">
            <field name="apptype_id" ref="apptype_backup"/>
            <field name="name">backup_method</field>
            <field name="type">application</field>
        </record>

        <record id="image_backup_simple" model="clouder.image">
            <field name="name">img_backup_simple</field>
            <field name="type_id" ref="apptype_backup"/>
            <field name="current_version">1</field>
            <field name="parent_id" ref="image_base"/>
            <field name="dockerfile"><![CDATA[

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get -y -q install python2.7-dev python-fuse python-pyxattr python-pylibacl python-tornado linux-libc-dev acl attr par2 git make cron ncftp


RUN mkdir  /home/backup
RUN chown -R backup:backup /home/backup
RUN usermod -d /home/backup -s /bin/bash backup
RUN mkdir /opt/backup
RUN chown -R backup:backup /opt/backup
RUN chmod -R 700 /opt/backup

USER backup
RUN mkdir  /home/backup/.ssh
RUN mkdir  /home/backup/.ssh/keys
RUN ln -s /opt/keys/authorized_keys /home/backup/.ssh/authorized_keys
RUN chmod -R 700 /home/backup/.ssh
RUN touch /home/backup/.hushlogin
RUN mkdir /opt/backup/simple


USER root

RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "[program:cron]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "command=cron -f" >> /etc/supervisor/conf.d/supervisord.conf

]]></field>
        </record>
        <record id="image_backup_simple_volume_backup" model="clouder.image.volume">
            <field name="image_id" ref="image_backup_simple"/>
            <field name="name">/opt/backup</field>
            <field name="nosave" eval="True"/>
        </record>

        <record id="app_backup_simple" model="clouder.application">
            <field name="name">Backup Simple</field>
            <field name="code">backup-sim</field>
            <field name="current_version">1</field>
            <field name="type_id" ref="apptype_backup"/>
            <field name="default_image_id" ref="image_backup_simple"/>
        </record>
        <record id="app_backup_option_method_simple" model="clouder.application.option">
            <field name="application_id" ref="app_backup_simple"/>
            <field name="name" ref="apptype_backup_option_method"/>
            <field name="value">simple</field>
        </record>
        <record id="app_backup_simple_link_upload" model="clouder.application.link">
            <field name="application_id" ref="app_backup_simple"/>
            <field name="name" ref="app_backup_upload"/>
            <field name="required" eval="True"/>
            <field name="auto" eval="True"/>
            <field name="container" eval="True"/>
        </record>


        <record id="image_backup_bup" model="clouder.image">
            <field name="name">img_backup_bup</field>
            <field name="type_id" ref="apptype_backup"/>
            <field name="current_version">1</field>
            <field name="parent_id" ref="image_base"/>
            <field name="dockerfile"><![CDATA[
RUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -q install supervisor python2.7-dev python-fuse python-pyxattr python-pylibacl python-tornado linux-libc-dev acl attr par2 git make cron ncftp g++ nagios-nrpe-server

RUN git clone git://github.com/bup/bup /opt/bup
RUN make -C /opt/bup
RUN make install -C /opt/bup

RUN mkdir  /home/backup
RUN chown -R backup:backup /home/backup
RUN usermod -d /home/backup -s /bin/bash backup
RUN mkdir /opt/backup
RUN chown -R backup:backup /opt/backup
RUN chmod -R 700 /opt/backup

USER backup
RUN mkdir  /home/backup/.ssh
RUN mkdir  /home/backup/.ssh/keys
RUN ln -s /opt/keys/authorized_keys /home/backup/.ssh/authorized_keys
RUN chmod -R 700 /home/backup/.ssh
RUN touch /home/backup/.hushlogin
RUN mkdir /opt/backup/bup

ENV BUP_DIR /opt/backup/bup
RUN bup init



USER root

ADD sources/check_backup /opt/check_backup
RUN chmod +x /opt/check_backup
RUN sed -i "s/nrpe_user=nagios/nrpe_user=backup/g" /etc/nagios/nrpe.cfg
RUN sed -i "s/nrpe_group=nagios/nrpe_group=backup/g" /etc/nagios/nrpe.cfg
RUN sed -i "s/allowed_hosts=127.0.0.1/allowed_hosts=172.17.0.0\\\/16/g" /etc/nagios/nrpe.cfg
RUN sed -i "s/dont_blame_nrpe=0/dont_blame_nrpe=1/g" /etc/nagios/nrpe.cfg
RUN echo "command[check_backup]=/opt/check_backup \\\$ARG1\\\$ \\\$ARG2\\\$ \\\$ARG3\\\$ \\\$ARG4\\$" >> /etc/nagios/nrpe.cfg

RUN echo "[supervisord]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf

RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "[program:cron]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "command=cron -f" >> /etc/supervisor/conf.d/supervisord.conf

RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "[program:bup-web]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "command=su backup -c 'BUP_DIR=/opt/backup/bup bup web :8080'" >> /etc/supervisor/conf.d/supervisord.conf


RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "[program:nrpe]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "command=/etc/init.d/nagios-nrpe-server restart" >> /etc/supervisor/conf.d/supervisord.conf



RUN echo "* * * * * root supervisorctl restart bup-web" >> /etc/crontab

CMD ["/usr/bin/supervisord"]

]]></field>
        </record>
        <record id="image_backup_bup_volume_backup" model="clouder.image.volume">
            <field name="image_id" ref="image_backup_bup"/>
            <field name="name">/opt/backup</field>
            <field name="nosave" eval="True"/>
        </record>
        <record id="image_backup_bup_port_web" model="clouder.image.port">
            <field name="image_id" ref="image_backup_bup"/>
            <field name="name">backup-web</field>
            <field name="localport">8080</field>
            <field name="expose">internet</field>
        </record>
        <record id="image_backup_bup_port_nrpe" model="clouder.image.port">
            <field name="image_id" ref="image_backup_bup"/>
            <field name="name">nrpe</field>
            <field name="localport">5666</field>
            <field name="expose">internet</field>
        </record>

        <record id="app_backup_bup" model="clouder.application">
            <field name="name">Backup Bup</field>
            <field name="code">backup-bup</field>
            <field name="type_id" ref="apptype_backup"/>
            <field name="default_image_id" ref="image_backup_bup"/>
        </record>
        <record id="app_backup_option_method_bup" model="clouder.application.option">
            <field name="application_id" ref="app_backup_bup"/>
            <field name="name" ref="apptype_backup_option_method"/>
            <field name="value">bup</field>
        </record>
        <record id="app_backup_bup_link_upload" model="clouder.application.link">
            <field name="application_id" ref="app_backup_bup"/>
            <field name="name" ref="app_backup_upload"/>
            <field name="auto" eval="True"/>
            <field name="container" eval="True"/>
        </record>

    </data>
</openerp>
