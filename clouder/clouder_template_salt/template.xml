<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <record id="tag_no_salt" model="clouder.application.tag">
            <field name="name">no-salt</field>
        </record>

        <record id="application_type_salt_master" model="clouder.application.type">
            <field name="name">salt-master</field>
            <field name="system_user">root</field>
            <field name="tag_ids" eval="[(6, 0, [ref('tag_no_backup'),ref('tag_no_salt')])]"/>
        </record>

        <record id="image_salt_master" model="clouder.image">
            <field name="name">img_salt_master</field>
            <field name="type_id" ref="application_type_salt_master"/>
            <field name="current_version">1.0</field>
            <field name="parent_from">clouder/clouder-base</field>
            <field name="parent_id"/>
            <field name="dockerfile">
                <![CDATA[

                RUN wget -O - https://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest/SALTSTACK-GPG-KEY.pub | sudo apt-key add -
                RUN echo "deb http://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest xenial main" > /etc/apt/sources.list.d/saltstack.list
                RUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -qq install salt-master salt-api salt-ssh supervisor python-pip

                RUN pip install --upgrade pip cherrypy

                ADD sources/salt-api.conf /etc/salt/master.d/salt-api.conf
                ADD sources/reactor.conf /etc/salt/master.d/reactor.conf
                RUN mkdir -p /srv/salt/_modules
                ADD sources/salt-master/* /srv/salt/
                ADD sources/_modules/clouder.py /srv/salt/_modules/
                RUN mkdir -p /srv/pillar/containers
                RUN mkdir -p /srv/pillar/bases
                RUN echo "base:" > /srv/pillar/top.sls

                RUN echo "[supervisord]" >> /etc/supervisor/conf.d/supervisord.conf
                RUN echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf
                RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf
                RUN echo "[program:salt]" >> /etc/supervisor/conf.d/supervisord.conf
		        RUN echo "command=salt-master" >> /etc/supervisor/conf.d/supervisord.conf
                RUN echo "[program:salt-api]" >> /etc/supervisor/conf.d/supervisord.conf
		        RUN echo "command=salt-api" >> /etc/supervisor/conf.d/supervisord.conf

                CMD ["/usr/bin/supervisord"]

                ]]>
            </field>
        </record>
        <record id="image_salt_master_port_ssh" model="clouder.image.port">
            <field name="image_id" ref="image_salt_master"/>
            <field name="name">ssh</field>
            <field name="localport">22</field>
            <field name="expose">internet</field>
        </record>
        <record id="image_salt_master_port_salt" model="clouder.image.port">
            <field name="image_id" ref="image_salt_master"/>
            <field name="name">salt</field>
            <field name="localport">4505</field>
            <field name="expose">internet</field>
            <field name="use_hostport" eval="True"/>
        </record>
        <record id="image_salt_master_port_saltret" model="clouder.image.port">
            <field name="image_id" ref="image_salt_master"/>
            <field name="name">saltret</field>
            <field name="localport">4506</field>
            <field name="expose">internet</field>
            <field name="use_hostport" eval="True"/>
        </record>
        <record id="image_salt_master_port_api" model="clouder.image.port">
            <field name="image_id" ref="image_salt_master"/>
            <field name="name">api</field>
            <field name="localport">8080</field>
            <field name="expose">internet</field>
        </record>


        <record id="application_salt_master" model="clouder.application">
            <field name="name">Salt Master</field>
            <field name="code">salt-master</field>
            <field name="type_id" ref="application_type_salt_master"/>
            <field name="default_image_id" ref="image_salt_master"/>
        </record>


        <record id="application_type_salt_minion" model="clouder.application.type">
            <field name="name">salt-minion</field>
            <field name="system_user">root</field>
            <field name="role_ids" eval="[(6, 0, [ref('role_no_backup'),ref('role_no_salt')])]"/>
        </record>
        <record id="image_salt_minion" model="clouder.image">
            <field name="name">img_salt_minion</field>
            <field name="current_version">1.0</field>
            <field name="parent_from">clouder/clouder-base</field>
            <field name="parent_id"/>
            <field name="dockerfile">
                <![CDATA[

                RUN wget -O - https://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest/SALTSTACK-GPG-KEY.pub | sudo apt-key add -
                RUN echo "deb http://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest xenial main" > /etc/apt/sources.list.d/saltstack.list
                RUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -qq install salt-minion python-docker python-pip

                RUN pip install --upgrade pip erppeek

                CMD salt-minion

                ]]>
            </field>
        </record>
        <record id="image_salt_minion_volume_docker" model="clouder.image.volume">
            <field name="image_id" ref="image_salt_minion"/>
            <field name="name">/var/run/docker.sock</field>
            <field name="hostpath">/var/run/docker.sock</field>
            <field name="readonly" eval="True"/>
            <field name="nosave" eval="True"/>
        </record>

        <record id="application_salt_minion" model="clouder.application">
            <field name="name">Salt Minion</field>
            <field name="code">salt-minion</field>
            <field name="type_id" ref="application_type_salt_minion"/>
            <field name="default_image_id" ref="image_salt_minion"/>
        </record>

    </data>
</openerp>
